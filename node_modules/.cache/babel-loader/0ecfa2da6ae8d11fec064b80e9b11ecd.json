{"ast":null,"code":"let img;\nlet frame = 0;\nlet s;\nlet k;\nlet a = [];\nlet hights = [];\nlet type = 2;\nlet done;\nlet SIMPVAL;\nlet NEGVAL;\nlet i = 0;\nlet n = 200;\nlet eps = 100;\nlet depth = 50;\nlet np = 40;\nlet lmax = 0;\nlet lmax1 = -800;\nlet perc = 0;\nlet step = 0;\nlet timestart;\nlet linesD = 0;\nlet fc1;\nlet delay;\nlet globT;\nlet pix = [];\nlet p1 = [];\nlet p2 = [];\nlet hi = [];\n\nfunction preload() {\n  img = loadImage('006.gif');\n  img.resize(width, height);\n}\n\nfunction setup() {\n  createCanvas(540, 540);\n  img.resize(width, height);\n  smooth(8);\n}\n\nfunction draw() {\n  if (frame < 1) {\n    image(img, 0, 0);\n  }\n\n  strokeWeight(0.8);\n  fill(0, 128);\n  stroke(0, 128);\n  let i = 0;\n\n  if (frame < 2) {\n    loadPixels();\n    const d = pixelDensity();\n    let s = 0.0;\n    pix = [];\n\n    for (let x = 0; x < width; x++) {\n      for (let y = 0; y < height; y++) {\n        const i = 4 * d * (y * d * width + x);\n        pix[y * width + x] = 255 - red(get(x, y));\n\n        if (pix[y * width + x] < 1) {\n          pix[y * width + x] = 0;\n        }\n\n        s += 1.0 * pix[y * width + x] / (width * height);\n      }\n    }\n\n    console.log(pix);\n    console.log(s);\n    SIMPVAL = int(s * 0.5);\n    NEGVAL = int(3 * s * 0.3);\n    console.log(SIMPVAL);\n    console.log(NEGVAL);\n\n    if (type === 1) {\n      let k = 0;\n\n      for (let i = 0; i < n / 4; i++) {\n        a[k] = i * (height - 1) * 4 / n;\n        a[k + n] = 0;\n        a[k + n / 4] = height - 1;\n        a[k + n / 4 + n] = i * (height - 1) * 4 / n;\n        a[k + n / 2] = height - i * (height - 1) * 4 / n - 1;\n        a[k + n / 2 + n] = height - 1;\n        a[k + 3 * n / 4] = 0;\n        a[k + 3 * n / 4 + n] = height - i * (height - 1) * 4 / n - 1;\n        k++;\n      }\n    }\n\n    if (type === 2) {\n      for (let i = 0; i < n; i++) {\n        hights[i] = -100;\n        a[i] = round(height / 2 + sin(TWO_PI * i / n) * (height / 2 - 1));\n        a[i + n] = round(height / 2 - cos(TWO_PI * i / n) * (height / 2 - 1));\n      }\n    }\n\n    done = false;\n    console.log(a);\n    console.log(p(10, 40 + frame, 0));\n    updatePixels();\n  }\n\n  if (frame == 3) {\n    background(255);\n  }\n\n  for (let i = 0; i < n; i++) {\n    hights[i] = 0;\n    ellipse(a[i], a[i + n], 2, 2);\n  }\n\n  console.log(p(10, 40 + frame, 0));\n\n  if (!done) {\n    draw2d();\n  } else {}\n\n  if (frame > 30) {\n    noLoop();\n  }\n\n  frame++;\n}\n\nfunction draw2d() {\n  go(depth);\n}\n\nfunction go(k) {\n  if (k != 0) {\n    let f = false;\n    let j = 0;\n    let max = -16000;\n    console.log(n);\n\n    for (let j1 = 0; j1 < 2 * n + 1 && !f; j1++) {\n      if (i != j1) {\n        let q = j1 % 2 === 0 ? (n + 1 + np + j1 / 2) % n : (n + 1 + np - (j1 + 1) / 2) % n;\n        let c = p(i, q, 0);\n\n        if (abs(c - lmax) < eps) {\n          j = q;\n          f = true;\n        } else if (c > max) {\n          j = q;\n          max = c;\n        }\n      }\n    }\n\n    if (!f || max > lmax || step > 2100) {\n      lmax = max;\n\n      if (lmax > lmax1) {\n        lmax1 = lmax;\n      }\n\n      if (lmax < eps && !done) {\n        done = true;\n        text(\"DONE\", 20, 40);\n        text(step, 20, 60);\n      }\n    }\n\n    line(a[i], a[i + n], a[j], a[j + n]);\n    step++;\n\n    if (i != j) {\n      i = p(i, j, 1);\n    }\n\n    np = i;\n    i = j;\n    go(k - 1);\n  }\n}\n\nfunction p(x, y, m) {\n  if (x != y) {\n    let s = 0;\n    let x0 = a[x];\n    let y0 = a[x + n];\n    let dx = abs(a[y] - a[x]);\n    let dy = abs(a[y + n] - a[x + n]);\n    let sx = a[x] < a[y] ? 1 : -1;\n    let sy = a[x + n] < a[y + n] ? 1 : -1;\n    let err = dx - dy;\n    let e2;\n    let f = false;\n\n    while (f != true) {\n      if (x0 === a[y] && y0 === a[y + n]) {\n        f = true;\n      }\n\n      if (m != 1) {\n        s += pix[x0 + y0 * height];\n      }\n\n      if (m == 1) {\n        if (pix[x0 + y0 * height] > 1) {\n          pix[x0 + y0 * height] -= SIMPVAL;\n        } else if (pix[x0 + y0 * height] <= 1) {\n          pix[x0 + y0 * height] = -NEGVAL;\n        }\n      }\n\n      e2 = 2 * err;\n\n      if (e2 > -dy) {\n        err = err - dy;\n        x0 = x0 + sx;\n      }\n\n      if (e2 < dx) {\n        err = err + dx;\n        y0 = y0 + sy;\n      }\n    }\n\n    return s;\n  } else {\n    return 0;\n  }\n}","map":{"version":3,"sources":["/home/crystaltony/developing/react/1/clear/src/index.js"],"names":["img","frame","s","k","a","hights","type","done","SIMPVAL","NEGVAL","i","n","eps","depth","np","lmax","lmax1","perc","step","timestart","linesD","fc1","delay","globT","pix","p1","p2","hi","preload","loadImage","resize","width","height","setup","createCanvas","smooth","draw","image","strokeWeight","fill","stroke","loadPixels","d","pixelDensity","x","y","red","get","console","log","int","round","sin","TWO_PI","cos","p","updatePixels","background","ellipse","draw2d","noLoop","go","f","j","max","j1","q","c","abs","text","line","m","x0","y0","dx","dy","sx","sy","err","e2"],"mappings":"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","sourcesContent":["let img;\nlet frame=0;\nlet s;\nlet k;\nlet a = [];\nlet hights = [];\nlet type = 2;\nlet done;\nlet SIMPVAL;\nlet NEGVAL;\nlet i = 0;\nlet n = 200;\nlet eps = 100;\nlet depth = 50;\nlet np = 40;\nlet lmax = 0;\nlet lmax1 = -800;\nlet perc = 0;\nlet step = 0;\nlet timestart;\nlet linesD = 0;\nlet fc1;\nlet delay;\nlet globT;\nlet pix = [];\nlet p1 = [];\nlet p2 = [];\nlet hi = [];\nfunction preload() {\n  img = loadImage('006.gif');\n  img.resize(width, height);\n}\n\nfunction setup() {\n  createCanvas(540, 540);\n  img.resize(width, height);\n  smooth(8);\n}\n\nfunction draw() {\n  if (frame<1) {\n    image(img, 0, 0);\n  }\n  strokeWeight(0.8);\n  fill(0, 128);\n  stroke(0, 128);\n  let i=0;\n  if (frame<2) {\n    loadPixels();\n    const d = pixelDensity();\n    let s=0.0;\n    pix = [];\n    for (let x = 0; x < width; x++) {\n      for (let y = 0; y < height; y++) {\n        const i = 4 * d * (y * d * width + x);\n        pix[y*width+x]=255-red(get(x, y));\n        if (pix[y*width+x] < 1) {\n          pix[y*width+x] = 0;\n        }\n        s += 1.0 * pix[y*width+x] / (width*height);\n      }\n    }\n    console.log(pix);\n    console.log(s);\n    SIMPVAL=int(s*0.5);\n    NEGVAL=int(3*s*0.3);\n    console.log(SIMPVAL);\n    console.log(NEGVAL);\n    if (type === 1) {\n      let k = 0;\n      for (let i = 0; i < n / 4; i++) {\n        a[k] = i * (height - 1) * 4 / n;\n        a[k + n] = 0;\n        a[k + n / 4] = height - 1;\n        a[k + n / 4 + n] = i * (height - 1) * 4 / n;\n        a[k + n / 2] = height - i * (height - 1) * 4 / n - 1;\n        a[k + n / 2 + n] = height - 1;\n        a[k + 3 * n / 4] = 0;\n        a[k + 3 * n / 4 + n] = height - i * (height - 1) * 4 / n - 1;\n        k++;\n      }\n    }\n    if (type === 2) {\n      for (let i = 0; i < n; i++) {\n        hights[i] = -100;\n        a[i] = round(height / 2 + (sin(TWO_PI * i / n) * (height / 2 - 1)));\n        a[i + n] = round(height / 2 - (cos(TWO_PI * i / n) * (height / 2 - 1)));\n      }\n    }\n    done = false;\n    console.log(a);\n    console.log(p(10, 40+frame, 0));\n    updatePixels();\n  }\n  if (frame==3) {\n    background(255);\n  }\n  for (let i = 0; i < n; i++) {\n    hights[i] = 0;\n    ellipse(a[i], a[i + n], 2, 2);\n  }\n  console.log(p(10, 40+frame, 0));\n  if (!done) {\n    draw2d();\n  } else {\n  }\n  if (frame > 30) {\n    noLoop();\n  }\n  frame++;\n}\n\nfunction draw2d() {\n  go(depth);\n}\n\nfunction go(k) {\n  if (k != 0) {\n    let f = false;\n    let j = 0;\n    let max = -16000;\n    console.log(n);\n    for (let j1 = 0; (j1 < ((2 * n) + 1)) && !f; j1++) {\n      if (i != j1) {\n        let q = (j1 % 2 === 0) ? (n + 1 + np + (j1 / 2)) % n : (n + 1 + np - ((j1 + 1) / 2)) % n;\n        let c = p(i, q, 0);\n        if (abs(c - lmax) < eps) {\n          j = q;\n          f = true;\n        } else if (c > max) {\n          j = q;\n          max = c;\n        }\n      }\n    }\n    if ((!f) || (max > lmax) || (step > 2100)) {\n      lmax = max;\n      if (lmax > lmax1) {\n        lmax1 = lmax;\n      }\n      if ((lmax < eps) && (!done)) {\n        done = true;\n        text(\"DONE\", 20, 40);\n        text(step, 20, 60);\n      }\n    }\n    line(a[i], a[i + n], a[j], a[j + n]);\n    step++;\n    if (i != j) {\n      i = (p(i, j, 1));\n    }\n    np = i;\n    i = j;\n    go(k - 1);\n  }\n}\n\nfunction p(x, y, m) {\n  if (x != y) {\n    let s = 0;\n    let x0 = a[x];\n    let y0 = a[x + n];\n    let dx = abs(a[y] - a[x]);\n    let dy = abs(a[y + n] - a[x + n]);\n    let sx = a[x] < a[y] ? 1 : -1;\n    let sy = a[x + n] < a[y + n] ? 1 : -1;\n    let err = dx - dy;\n    let e2;\n    let f=false;\n    while (f!=true) {\n      if (x0 === a[y] && y0 === a[y + n]) {\n        f=true;\n      }\n      if (m != 1) {\n        s += pix[x0 + y0 * height];\n      }\n      if (m == 1) {\n        if (pix[x0 + y0 * height] > 1) {\n          pix[x0 + y0 * height] -= SIMPVAL;\n        } else if (pix[x0 + y0 * height] <= 1) {\n          pix[x0 + y0 * height] = -NEGVAL;\n        }\n      }\n      e2 = 2 * err;\n      if (e2 > -dy) {\n        err = err - dy;\n        x0 = x0 + sx;\n      }\n      if (e2 < dx) {\n        err = err + dx;\n        y0 = y0 + sy;\n      }\n    }\n    return s;\n  } else {\n    return 0;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}